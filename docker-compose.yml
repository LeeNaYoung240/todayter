version: "3.9"

services:
  nginx:
    image: nginx:latest
    container_name: todayter-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - letsencrypt:/etc/letsencrypt
      - certbot-webroot:/var/www/certbot
    depends_on:
      - app
    networks:
      - todayter-network
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: todayter-postgres
    environment:
      POSTGRES_DB: todayter
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${PASSWORD}
    networks:
      - todayter-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: todayter-redis
    networks:
      - todayter-network
    restart: unless-stopped

  app:
    build: .
    container_name: todayter-app
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    environment:
      - JAVA_TOOL_OPTIONS=-Djdk.internal.platform.disableCgroupMemoryLimit=true
    expose:
      - "8081"
    networks:
      - todayter-network
    restart: unless-stopped
    volumes:
      - ./build/libs/todayter-0.0.1-SNAPSHOT.jar:/app.jar
      - ./.env:/.env

networks:
  todayter-network:
    driver: bridge

volumes:
  postgres-data:
  letsencrypt:
  certbot-webroot:
  certbot-etc:

